{
  // Настройки проекта
  "env": {
    // Проект для браузера
    "browser": true,
    // Включаем возможности ES6
    "es6": true
  },

  "root": true,
  // Движок парсинга
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": 2021,
    "sourceType": "module",
    // Движку нужен проект TS для правил с типами
    "project": "./tsconfig.json",
    "tsconfigRootDir": ".",
    "ecmaFeatures": {
      "jsx": true
    }
  },
  "plugins": [
    // Плагин с наборами правил для TypeScript
    "@typescript-eslint",
    "jsx-a11y"
  ],
  // Наборы правил
  "extends": [
    // Базовый набор правил eslint
    "eslint:recommended",
    // Отключаем правила из базового набора
    "plugin:@typescript-eslint/eslint-recommended",
    // Базовые правила для TypeScript
    "plugin:@typescript-eslint/recommended",
    // Правила TS, требующие инфо о типах
    "plugin:@typescript-eslint/recommended-requiring-type-checking"
    // Правила React-app
    // "react-app"
    // "prettier",
    // "prettier/@typescript-eslint"
  ],
  "ignorePatterns": [
    "src/assets/proto_compiled/proto.js"
  ],
  "rules": {
    "@typescript-eslint/explicit-member-accessibility": "off",
    "@typescript-eslint/explicit-function-return-type": "off",
    "@typescript-eslint/no-parameter-properties": "off",
    // Новая строка перед однострочным комментарием
    "nonblock-statement-body-position": ["error", "below"]
  },
  "overrides": [
    {
      "files": ["*.tsx", "*.jsx", "*.js"],
      "rules": {
        "@typescript-eslint/no-non-null-assertion": "off", // Разрешить приведение undefined через !
        "@typescript-eslint/no-unsafe-member-access": "off",
        "@typescript-eslint/no-unused-vars": "off",
        "@typescript-eslint/no-unsafe-assignment": "off",
        "@typescript-eslint/no-unsafe-call": "off",
        "@typescript-eslint/no-unsafe-return": "off",
        // Разрешить использование типа any
        "@typescript-eslint/no-explicit-any": "off",
        // Перенос строки для неблочных операторов
        "nonblock-statement-body-position": ["error", "below"],
        // Двойные кавычки в jsx
        "jsx-quotes": ["error", "prefer-double"],
        // Одинарные кавычки в остальном коде
        "quotes": ["error", "single"],
        // Перенос строки перед операторами
        "operator-linebreak": ["error", "after", { "overrides": { "?": "before", ":": "before" } }],
        // Перенос после else, фигурная скобка после if без переноса
        "brace-style": ["error", "stroustrup"]
      }
    },
    {
      "files": ["src/*.js" ,"src/**/*.js"],
      "rules": {
        "@typescript-eslint/restrict-template-expressions": "off",
        "@typescript-eslint/no-empty-function": "off",
        "@typescript-eslint/no-floating-promises": "off",
        "@typescript-eslint/restrict-plus-operands": "off",
        "@typescript-eslint/explicit-module-boundary-types": "off",
        "no-prototype-builtins": "off"
      }
    },
    {
      "files": ["gulpfile.js", "rsync.js", "make/*.js", "make/**/*.js"],
      "parser": "esprima",
      "env": {
        // Проект для node
        "browser": false,
        "node": true,
        "es6": true
      }
    }
  ]
}
