

CAST_EXPLICIT_ALL                         = 0
CAST_EQUALLY_BY_BASE                      = (0)
CAST_HS_BASE_OFFSET                       = 12
CAST_LENGTH_CATHEGORY_OFFSET              = (CAST_HS_BASE_OFFSET            + 2)
CAST_RELATION_PRECISION_OFFSET            = (CAST_LENGTH_CATHEGORY_OFFSET   + 2)
CAST_RELATION_SCALE_OFFSET                = (CAST_RELATION_PRECISION_OFFSET + 2)
CAST_RELATION_LENGTH_OFFSET               = (CAST_RELATION_SCALE_OFFSET     + 2)
CAST_STATE_OFFSET                         = (CAST_RELATION_LENGTH_OFFSET    + 2)


CAST_IMPLICIT                             = (1 << 0 )
CAST_EQUALLY                              = (1 << 1 )
CAST_IN_SELECT_RHS_FIELD_TO_INTO_LHS_VAR  = (1 << 2 )
CAST_IN_RETURN_RHS_FACT_TO_LHS_RETTYPE    = (1 << 3 )
CAST_DATATYPES_UNRESOLVED_ERROR           = (1 << 4 )
CAST_INTERNAL_TYPES_NUM_NEED_CMP_BY_LEN   = (1 << 5 )
CAST_INTERNAL_TYPES_CHR_NEED_CMP_BY_LEN   = (1 << 6 )
CAST_FUNCTION_CALLS_TO_REDUCED_RETTYPE    = (1 << 7 )
CAST_ASSIGNMENT                           = (1 << 8 )
CAST_RETURN                               = (1 << 9 )

CAST_CAST_LHS_TO_RHS                      = (1 << 10 )
CAST_CAST_RHS_TO_LHS                      = (1 << 11 )

CAST_IN_UNION                             = (1 << 24 )

CAST_GET_RHS_BASE                         = (1 << (CAST_HS_BASE_OFFSET   ) )
CAST_GET_LHS_BASE                         = (1 << (CAST_HS_BASE_OFFSET+1 ) )
CAST_HS_BASE_MASK                         = (CAST_GET_RHS_BASE | CAST_GET_LHS_BASE)
CAST_VARCHAR_CATHEGORY                    = (1 << (CAST_LENGTH_CATHEGORY_OFFSET))
CAST_DECIMAL_CATHEGORY                    = (1 << (CAST_LENGTH_CATHEGORY_OFFSET + 1))
CAST_BY_PREC_LHS_GT_RHS                   = (1 << (CAST_RELATION_PRECISION_OFFSET) )
CAST_BY_PREC_LHS_LT_RHS                   = (1 << (CAST_RELATION_PRECISION_OFFSET + 1))
CAST_BY_SCALE_LHS_GT_RHS                  = (1 << (CAST_RELATION_SCALE_OFFSET))
CAST_BY_SCALE_LHS_LT_RHS                  = (1 << (CAST_RELATION_SCALE_OFFSET + 1))
CAST_BY_SCALE_MASK                        = (CAST_BY_SCALE_LHS_GT_RHS | CAST_BY_SCALE_LHS_LT_RHS)
CAST_BY_LENGTH_LHS_GT_RHS                 = (1 << (CAST_RELATION_LENGTH_OFFSET))
CAST_BY_LENGTH_LHS_LT_RHS                 = (1 << (CAST_RELATION_LENGTH_OFFSET + 1))
CAST_STATE_PROC                           = (1 << (CAST_STATE_OFFSET))
CAST_STATE_SQL                            = (1 << (CAST_STATE_OFFSET + 1))


CAST_EXPLICIT_SELECT                      = (CAST_IMPLICIT | CAST_IN_SELECT_RHS_FIELD_TO_INTO_LHS_VAR)
CAST_EXPLICIT_RETURN                      = (CAST_IMPLICIT | CAST_IN_RETURN_RHS_FACT_TO_LHS_RETTYPE  )
CAST_EXPLICIT_UNION                       = (CAST_IMPLICIT | CAST_IN_UNION)
CAST_EXPLICIT_SELECT_AND_RETURN           = (CAST_EXPLICIT_SELECT | CAST_EXPLICIT_RETURN             )
CAST_EXPLICIT_SELECT_UNION                = (CAST_IMPLICIT | CAST_EXPLICIT_SELECT | CAST_EXPLICIT_UNION)
CAST_EXPLICIT_SELECT_RETURN_UNION         = (CAST_EXPLICIT_SELECT | CAST_EXPLICIT_RETURN | CAST_EXPLICIT_UNION )


CAST_CHAR_BY_LENGTH_GT                    = (CAST_IMPLICIT | CAST_VARCHAR_CATHEGORY | CAST_BY_PREC_LHS_GT_RHS | CAST_BY_LENGTH_LHS_GT_RHS)

CAST_CHAR_BY_LENGTH_LT                    = (CAST_IMPLICIT | CAST_VARCHAR_CATHEGORY | CAST_BY_PREC_LHS_LT_RHS | CAST_BY_LENGTH_LHS_LT_RHS  | CAST_IN_SELECT_RHS_FIELD_TO_INTO_LHS_VAR)
CAST_NUM_BY_LENGTH_GT                     = (CAST_IMPLICIT | CAST_DECIMAL_CATHEGORY | CAST_BY_LENGTH_LHS_GT_RHS)
CAST_NUM_BY_LENGTH_LT                     = (CAST_IMPLICIT | CAST_DECIMAL_CATHEGORY | CAST_BY_LENGTH_LHS_LT_RHS)
CAST_NUM_GT_PREC_LT_SCALE                 = (CAST_IMPLICIT | CAST_DECIMAL_CATHEGORY | CAST_BY_PREC_LHS_GT_RHS | CAST_BY_SCALE_LHS_LT_RHS | CAST_BY_LENGTH_LHS_GT_RHS | CAST_BY_LENGTH_LHS_LT_RHS)
CAST_NUM_LT_PREC_GT_SCALE                 = (CAST_IMPLICIT | CAST_DECIMAL_CATHEGORY | CAST_BY_PREC_LHS_LT_RHS | CAST_BY_SCALE_LHS_GT_RHS | CAST_BY_LENGTH_LHS_GT_RHS | CAST_BY_LENGTH_LHS_LT_RHS)


CAST_STRONG_EQUALLY                       = (CAST_EQUALLY | CAST_EQUALLY_BY_BASE)

def BIT01OR(a):               return (((a) & 1) | (((a) & 2) >> 1))

def CAST_DECODE_HS_BASE(a):   return ((a) ^ (BIT01OR(a) | (BIT01OR(a) << 1)))
def CAST_DECODE_ITEM(a, off): return (((a) >> off) & 3)
def CAST_HS_BASE(a):          return CAST_DECODE_ITEM(a, CAST_HS_BASE_OFFSET)





